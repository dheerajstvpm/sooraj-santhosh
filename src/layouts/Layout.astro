---
import { ViewTransitions } from "astro:transitions";

export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Sooraj Santhosh Official Website" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <ViewTransitions />
  </head>
  <body class="bg-white dark:bg-black text-black dark:text-white">
    <header class="flex justify-between items-center p-4">
      <a href="/sooraj-santhosh/">
        <img src="/images/logo.png" alt="Sooraj Santhosh Logo" class="h-12" />
      </a>
      <nav class="hidden md:flex space-x-4">
        <a href="/sooraj-santhosh/" class="hover:text-gray-400">Home</a>
        <a href="/sooraj-santhosh/about" class="hover:text-gray-400">About</a>
        <a href="/sooraj-santhosh/music" class="hover:text-gray-400">Music</a>
        <a href="/sooraj-santhosh/videos" class="hover:text-gray-400">Videos</a>
        <a href="/sooraj-santhosh/gallery" class="hover:text-gray-400"
          >Gallery</a
        >
        <a href="/sooraj-santhosh/contact" class="hover:text-gray-400"
          >Contact</a
        >
      </nav>
      <button
        id="theme-toggle"
        class="p-2 rounded-md hover:bg-gray-200 dark:hover:bg-gray-800"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-6 w-6"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
          ></path>
        </svg>
      </button>
    </header>
    <main>
      <slot />
    </main>
    <footer class="text-center p-4">
      &copy; {new Date().getFullYear()} Sooraj Santhosh. All rights reserved.
    </footer>
    <a
      href="https://api.whatsapp.com/send?phone=917736967999"
      target="_blank"
      rel="noopener noreferrer"
      class="fixed bottom-4 right-4 bg-green-500 text-white p-4 rounded-full shadow-lg hover:bg-green-600"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-6 w-6"
        fill="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          d="M.057 24l1.687-6.163c-1.041-1.804-1.588-3.849-1.587-5.946.003-6.556 5.338-11.891 11.893-11.891 3.181.001 6.167 1.24 8.413 3.488 2.245 2.248 3.481 5.236 3.48 8.414-.003 6.557-5.338 11.892-11.894 11.892-1.99-.001-3.951-.5-5.688-1.448l-6.305 1.654zm6.597-3.807c1.676.995 3.276 1.591 5.392 1.592 5.448 0 9.886-4.434 9.889-9.885.002-5.462-4.415-9.89-9.881-9.892-5.452 0-9.887 4.434-9.889 9.884-.001 2.225.651 3.891 1.746 5.634l-.999 3.648 3.742-.981zm11.387-5.464c-.074-.124-.272-.198-.57-.347-.297-.149-1.758-.868-2.031-.967-.272-.099-.47-.149-.669.149-.198.297-.768.967-.941 1.165-.173.198-.347.223-.644.074-.297-.149-1.255-.462-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.297-.347.446-.521.151-.172.2-.296.3-.495.099-.198.05-.372-.025-.521-.075-.148-.669-1.611-.916-2.206-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01s-.521.074-.792.372c-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.695.248-1.289.173-1.413z"
        ></path>
      </svg>
    </a>
    <script>
      const themeToggle = document.getElementById("theme-toggle");
      const prefersDark = window.matchMedia("(prefers-color-scheme: dark)");

      // Function to set theme
      const setTheme = (isDark: boolean) => {
        if (isDark) {
          document.documentElement.classList.add("dark");
        } else {
          document.documentElement.classList.remove("dark");
        }
        localStorage.setItem("theme", isDark ? "dark" : "light");
      };

      // Initial theme setup
      const storedTheme = localStorage.getItem("theme");
      if (storedTheme) {
        setTheme(storedTheme === "dark");
      } else {
        setTheme(prefersDark.matches);
      }

      // Listen for toggle button click
      if (themeToggle) {
        themeToggle.addEventListener("click", () => {
          const isDark = document.documentElement.classList.contains("dark");
          setTheme(!isDark);
        });
      }

      // Listen for system theme changes
      prefersDark.addEventListener("change", (e) => {
        const storedTheme = localStorage.getItem("theme");
        if (!storedTheme) {
          setTheme(e.matches);
        }
      });
    </script>
  </body>
</html>
